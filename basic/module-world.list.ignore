
{:world.init}
dim ma(50,50) :dim cc(20)
cc(0)=6 :cc(1)=3 :cc(2)=3 :cc(3)=3
cc(4)=7 :cc(5)=7 :cc(6)=7 :cc(7)=5
cc(8)=5 :cc(9)=5 :cc(10)=5 :cc(11)=5
cc(12)=13 :cc(13)=13 :cc(14)=15 :cc(15)=15
cc(16)=15 :cc(17)=15 :cc(18)=14 :cc(19)=14
cc(20)=15
return

; -----------------------------------------------
;
rem populate ma() with terrain
;
; -----------------------------------------------
{:world.create}
mu = 2
R=50 :c=50
for i = 0 to 5 * mu 

   x = int(rnd(1)*(c-10))+5
   y = int(rnd(1)*(r-10))+5

   for j = 1 to int(rnd(1)*R*C/(2*mu))

      print ".";
;
;  rnd()-rnd() takes longer
;
      x=x+2*rnd(1)-1
      y=y+2*rnd(1)-1

;
;	Appx 3 sec per outer loop
;
      if x<0 or y<0 or x>c or y>r goto {:continue1}
      ma(x,y) = ma(x,y)+1

;
;	Save this for an analysis step!!
;	This takes most of the time.
;
;      if x>c-1 or x<1 or y>r-1 or y<1 goto {:continue1}
;      f=ma(x,y)
;      if f <> ma(x-1,y) goto {:continue1}
;      if f <> ma(x+1,y) goto {:continue1}
;      if f <> ma(x,y-1) goto {:continue1}
;      if f = ma(x,y+1) then ma(x,y) = 10

{:continue1}
   next j

next i

return

;? "gen time: " ti - tt "(" ti$ " seconds)"

; -----------------------------------------------
;
rem  Get Terrain 
rem  in:  i,j
rem  out: t
;
; -----------------------------------------------
{:world.get-current}
t = ma(i,j)
return


; -----------------------------------------------
;
rem  Show Terrain
;
; -----------------------------------------------
{:world.show}
for x = 1 to c+2 :? "-"; :next: ?

for j = 0 to r-1
   ? "|";
   for i = 0 to c-1
      if ma(i,j) = 0 then ? " "; :goto {:continue2}
      co = ma(i,j) :if co>20 then co=20
      color cc(co),6
      print "x"; 
;chr$(ma(i,j)+48);

{:continue2}

   next i
   ? "|"
next j

for x = 1 to c+2 :? "-"; :next: ?
return

